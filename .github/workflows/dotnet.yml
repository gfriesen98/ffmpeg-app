name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
  
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore Packages
      run: nuget restore simple-ffmpeg-app.sln

    - name: Build solution
      run: msbuild simple-ffmpeg-app.sln -t:rebuild -property:Configuration=Release

    # - name: Set New Tag Version
    #   id: new_tag
    #   #run: echo "NEW_TAG=$(echo ${{ steps.previoustag.outputs.tag }} | awk -F. -v OFS=. '{$NF += 1; print}')" >> $GITHUB_OUTPUT
    #   # this works ^, as in steps.previoustag.outputs.tag shows up
    #   run: |
    #     new_tag=$(echo ${{ steps.previoustag.outputs.tag }} | awk -F. -v OFS=. '{$NF += 1; print}')
    #     echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
      
    # - name: Testing
    #   run: echo "${{ steps.new_tag.outputs.new_tag }}"
    #   # this doesnt ^, steps.new_tag.outputs.new_tag shows empty

    # - name: Bump version and push tag
    #   id: tag_version
    #   uses: miguelfito/github-bump-and-tag-action@v1
    #   with:
    #     github_token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - name: Create new tag name
      id: getNewTag
      run: echo "TestOutput=$(echo ${{ steps.previoustag.outputs.tag }} | awk -F. -v OFS=. '{$NF += 1; print'})" >> $GITHUB_OUTPUT
      shell: bash
      # run: echo "TestOutput=OSDFUHISDKFJH" >> $env:GITHUB_OUTPUT
      # shell: pwsh

    - name: TestingReadingOutputs
      id: testReadOutput
      run: echo ${{ steps.testOutput.outputs.TestOutput }}
    
    - name: Create Prerelease
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        prerelease: true
        body: Autogenerated build release
        fail_on_unmatched_files: true
        target_commitish: "main"
        generate_release_notes: true
        #files: simple-ffmpeg-app.exe
        #files: ".\\simple-ffmpeg-app\\bin\\Release\\simple-ffmpeg-app.exe"
        #files: release.txt
        files: "D:/a/ffmpeg-app/ffmpeg-app/simple-ffmpeg-app/bin/Release/simple-ffmpeg-app.exe"
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
      env:
        GITHUB_REPOSITORY: gfriesen98/ffmpeg-app
